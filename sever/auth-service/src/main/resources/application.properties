# Auth Service Configuration
server.port=${SERVER_PORT}

# Application name
spring.application.name=auth-service

# Eureka client configuration
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL}
eureka.instance.prefer-ip-address=true

# RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST}
spring.rabbitmq.ssl.enabled=true

# RabbitMQ Connection Timeout Configuration (30 seconds)
spring.rabbitmq.connection-timeout=30000
spring.rabbitmq.requested-heartbeat=60
spring.rabbitmq.requested-channel-max=2047

# RabbitMQ Cache Configuration
spring.rabbitmq.cache.channel.size=25
spring.rabbitmq.cache.channel.checkout-timeout=30000
spring.rabbitmq.cache.connection.size=10
spring.rabbitmq.cache.connection.mode=CONNECTION

# Redis host và port
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.username=${REDIS_USERNAME}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.ssl.enabled=${REDIS_SSL_ENABLED}
spring.data.redis.database=0
spring.data.redis.timeout=60000

spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USER}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Pool configuration (nếu dùng Jedis)
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=-1

# RabbitMQ Queues
rabbitmq.queues.user-authenticate=user.authenticate.queue
rabbitmq.queues.user-authenticate-reply=user.authenticate.reply.queue

# Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging
logging.level.com.example.authservice=DEBUG
logging.level.org.springframework.amqp=DEBUG

# =====================================
# OAuth2 Configuration Template
# =====================================
# Google OAuth2 Client
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Facebook OAuth2 Client
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri=${FACEBOOK_REDIRECT_URI}
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code

# GitHub OAuth2 Client
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri=${GITHUB_REDIRECT_URI}
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code

# Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Facebook Provider Configuration
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v18.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v18.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,email,name,picture
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

# GitHub Provider Configuration
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login